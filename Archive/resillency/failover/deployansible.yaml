---
- name: deploy the hpdc lab
  hosts: localhost
  tasks:
  - name: launch a vpc
    cloudformation:
      stack_name: "vpc"
      state: "present"
      region: "us-east-2"
      disable_rollback: true
      template: "vpc.yaml"
    register: vpcout
  - name: example ec2 key
    ec2_key:
      region: "us-east-2"
      name: ecommkey
    register: ecommkeyout
  - name: example copying file with owner and permissions
    copy:
      content: "{{ecommkeyout.key.private_key}}"
      dest: ecomm.pem
      mode: 0600
    when: ecommkeyout is changed
  - name: launch a db instance
    cloudformation:
      stack_name: "hddcdb"
      state: "present"
      region: "us-east-2"
      disable_rollback: true
      template: "dbinstance.yaml"
      template_parameters:
         VPCID: "{{vpcout.stack_outputs.VPCID}}"
         Subnet1: "{{vpcout.stack_outputs.PrivateSubnet1ID}}"
         Subnet2: "{{vpcout.stack_outputs.PrivateSubnet2ID}}"
         snapshotid: hpdc-backup
    register: dbinstance
  - name: launch a amiinstance
    cloudformation:
      stack_name: "amiinstance"
      state: "present"
      region: "us-east-2"
      disable_rollback: true
      template: "amiinstance.yaml"
      template_parameters:
         VPCID: "{{vpcout.stack_outputs.VPCID}}"
         SubnetId: "{{vpcout.stack_outputs.PublicSubnet1ID}}"
    register: amiinstanceout
  - name: launch a loadblancer
    cloudformation:
      stack_name: "loadbalancer"
      state: "present"
      region: "us-east-2"
      disable_rollback: true
      template: "loadbalancer.yaml"
      template_parameters:
         VPCID: "{{vpcout.stack_outputs.VPCID}}"
         PublicSubnet1ID: "{{vpcout.stack_outputs.PublicSubnet1ID}}"
         PublicSubnet2ID: "{{vpcout.stack_outputs.PublicSubnet2ID}}"
    register: loadbalancer
  - name: add the hosts
    add_host: 
      name: '{{amiinstanceout.stack_outputs.EC2PublicIp}}'
      ansible_user: ec2-user
      ansible_ssh_private_key_file: ecomm.pem
      ansible_become: yes
  - import_tasks: installwordpress.yaml
    delegate_to: '{{amiinstanceout.stack_outputs.EC2PublicIp}}'
  - debug:
     var: loadbalancer
  - copy:
      content: |
        vpcid: "{{vpcout.stack_outputs.VPCID}}"
        publicsn1: "{{vpcout.stack_outputs.PublicSubnet1ID}}"
        publicsn2: "{{vpcout.stack_outputs.PublicSubnet2ID}}"
        privatesn1: "{{vpcout.stack_outputs.PrivateSubnet1ID}}"
        privatesn2: "{{vpcout.stack_outputs.PrivateSubnet2ID}}"
        instanceid: '{{amiinstanceout.stack_outputs.EC2InstanceId}}'
        instancesg: '{{loadbalancer.stack_outputs.InstanceSecurityGroup}}'
        lbdns: '{{loadbalancer.stack_outputs.LoadBalancerDNS}}'
        targetgroup: '{{loadbalancer.stack_outputs.ApplicationLoadBalancerTargetGroup}}'
      dest: amiserverout.yaml
     